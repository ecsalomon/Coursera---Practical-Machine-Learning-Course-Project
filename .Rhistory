library(caret)
library(lattice)
library(ggplot2)
library(randomForest)
library(doParallel)
registerDoParallel(cores=2)
source("getData.R")
training <- getData("training")
trainIndex = createDataPartition(training$classe, p = 0.50, list = FALSE)
train = training[trainIndex,]
validate = training[-trainIndex,]
testing <- getData("testing")
trainReduce <- train[, c(8:11, 37:49, 60:68, 84:86, 102, 113:124, 140, 151:160)]
preProc <- preProcess(trainReduce[, 1:52], method = "pca", thresh = .5)
trainPCA <- predict(preProc, trainReduce[, 1:52])
trainPCA$classe <- trainReduce$classe
set.seed(3)
modFit <- train(classe ~ .,
method = "rf", data = trainPCA)
modFit$finalModel
?predict
pca5 <- predict(modFit, newdata = validate)
pca5predictions <- predict(modFit$finalModel, newdata = validate)
pca5predictions <- predict(modFit$finalModel, newdata = completec.cases(validate))
pca5predictions <- predict(modFit$finalModel, newdata = complete.cases(validate))
validatePCA5 <- predict(preProc, validate)
warnings()
validatePCA5 <- predict(preProc, validate[, 1:52])
validateReduce <- validate[, c(8:11, 37:49, 60:68, 84:86, 102, 113:124, 140,
151:160)]
validatePCA5 <- predict(preProc, validateReduce[, 1:52])
pca5predictions <- predict(modFit$finalModel, newdata = complete.cases(validate))
pca5predictions <- predict(modFit$finalModel, newdata = validatePCA5)
View(validateReduce)
View(validateReduce)
table(pca5predictions, validateReduce$classe)
View(trainIndex)
View(training)
View(trainPCA)
View(testing)
cor(trainReduce[, -53])
nearZeroVar(trainReduce[, -53])
findCorrelation(trainReduce[, -53], cutoff = .6, verbose = TRUE)
findCorrelation(cor(trainReduce[, -53]), cutoff = .6, verbose = TRUE)
?findCorrelation
removeCols <- findCorrelation(cor(trainReduce[, -53]), cutoff = .6,
verbose = FALSE)
trainSelected <- trainReduce[, -removeCols]
registerDoParallel(cores=4)
?train
trainSelected <- trainReduce[, -removeCols]
trainIndex = createDataPartition(trainSelected, p = 0.50, list = FALSE)
trainSel = trainSelected[trainIndex,]
validateSel = trainSelected[-trainIndex,]
train_control <- trainControl(method="repeatedcv", number=10, repeats=3)
set.seed(3)
modFitSel <- train(classe ~ ., trControl = train_control
method = "rf", data = trainSel)
trainSelected <- trainReduce[, -removeCols]
trainIndex = createDataPartition(trainSelected$classe, p = 0.50, list = FALSE)
trainSel = trainSelected[trainIndex,]
validateSel = trainSelected[-trainIndex,]
train_control <- trainControl(method="repeatedcv", number=10, repeats=3)
set.seed(3)
modFitSel <- train(classe ~ ., trControl = train_control,
method = "rf", data = trainSel)
modFitSel$finalModel
selPredictions <- predict(modFitSel$finalModel, newdata = validateSel)
table(selPredictions, validateSel$classe)
removeCols <- findCorrelation(cor(trainReduce[, -53]), cutoff = .7,
verbose = FALSE)
trainSelected <- trainReduce[, -removeCols]
trainIndex = createDataPartition(trainSelected$classe, p = 0.50, list = FALSE)
trainSel = trainSelected[trainIndex,]
validateSel = trainSelected[-trainIndex,]
train_control <- trainControl(method="repeatedcv", number=10, repeats=3)
set.seed(3)
modFitSel <- train(classe ~ ., trControl = train_control,
method = "rf", data = trainSel)
varImp(modFitSel$finalModel)
selPredictions <- predict(modFitSel$finalModel, newdata = validateSel)
table(selPredictions, validateSel$classe)
modFitSel$finalModel
library(rattle)
install.packages("rattle", repos="http://rattle.togaware.com", type="source")
get.file("http://r.research.att.com/libs/GTK_2.24.17-X11.pkg", "gtk", method = "curl")
download.file("http://r.research.att.com/libs/GTK_2.24.17-X11.pkg", "gtk", method = "curl")
?download.file
download.file("http://r.research.att.com/libs/GTK_2.24.17-X11.pkg", "gtk", method = "internal")
install.packages("gtk", repos = NULL)
install(gtk.pkg)
library(devtools)
install("gtk.pkg")
install("/gtk.pkg")
install("")
install("/")
library(rattle)
library(rattle)
install.packages("gtk2")
install.packages("RGtk2")
library(rattle)
library(rattle)
